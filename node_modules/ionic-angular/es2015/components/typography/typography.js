import { Attribute, Directive, ElementRef, Input, Renderer } from '@angular/core';
import { Config } from '../../config/config';
import { Ion } from '../ion';
export class Typography extends Ion {
    constructor(config, elementRef, renderer, ionText) {
        super(config, elementRef, renderer, 'text');
        if (ionText === null) {
            console.warn('Deprecated: The color input has been removed from HTML elements. Please add the `ion-text` attribute in order to use the color input. For example: `<a ion-text color="secondary">Link</a>`');
        }
    }
    set color(val) {
        this._setColor(val);
    }
    set mode(val) {
        this._setMode(val);
    }
}
Typography.decorators = [
    { type: Directive, args: [{
                selector: 'h1[color], h2[color], h3[color], h4[color], h5[color], h6[color], a[color]:not([ion-button]):not([ion-item]):not([ion-fab]), p[color], span[color], b[color], i[color], strong[color], em[color], small[color], sub[color], sup[color], [ion-text]'
            },] },
];
Typography.ctorParameters = [
    { type: Config, },
    { type: ElementRef, },
    { type: Renderer, },
    { type: undefined, decorators: [{ type: Attribute, args: ['ion-text',] },] },
];
Typography.propDecorators = {
    'color': [{ type: Input },],
    'mode': [{ type: Input },],
};
//# sourceMappingURL=typography.js.map